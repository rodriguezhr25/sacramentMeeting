@model PaginatedList<SacramentalApp.Models.MusicSelection>

@{
    ViewData["Title"] = "Music Selections";
}

<h1>Music Selections</h1>

<p>
    <a class="btn btn-success" asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-group row">
        <div class="col-sm-4">
            <div class="input-group">
                <input type="text" id="searchBox" name="searchString" class="form-control" placeholder="Search by Hymn Number or Name" value="@ViewData["CurrentFilter"]" />
                <div class="input-group-append">
                    <input type="submit" value="Search" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </div>
</form>

<div class="table-responsive">
    <table class="table table-hover">
        <thead class="border-bottom">
            <tr>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["HymnNumberSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Hymn Number</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Name</a>
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.HymnNumber)</td>
                    <td>@Html.DisplayFor(modelItem => item.Name)</td>
                    <td>
                        <a class="btn btn-success" asp-action="Edit" asp-route-id="@item.Id" title="Edit"><i class="fa fa-pencil-square-o"></i></a>
                        <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id" title="Delete"><i class="fa fa-trash"></i></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div>
    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <a asp-action="Index"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-primary @prevDisabled">
        Previous
    </a>
    <a asp-action="Index"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-primary @nextDisabled">
        Next
    </a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}